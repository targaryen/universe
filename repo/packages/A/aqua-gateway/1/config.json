{
  "properties": {
    "service": {
      "description": "Overall service configuration for Aqua Gateway",
      "type": "object",
      "properties": {
        "name": {
          "description": "Display name for the service on the DC/OS dashboard",
          "type": "string",
          "default": "aqua-gateway"
        },
        "instances": {
          "description": "Number of Aqua Gateway instances to deploy",
          "type": "integer",
          "default": 1
        },
        "public_address": {
          "description": "The 'public' address for the gateways, given to agents and used for availability checks.",
          "type": "string",
          "default": "aqua-gateway.marathon.l4lb.thisdcos.directory:3622"
        },
        "port": {
          "description": "Port to run the Aqua Gateway SSH connection on",
          "type": "integer",
          "default": 3622
        }
      },
      "required": [
        "name",
        "cpus",
        "mem",
        "instances",
        "port"
      ]
    },
    "database": {
      "description": "Primary database configuration for Aqua",
      "properties": {
        "database_user": {
          "description": "Aqua's primary database username",
          "type": "string",
          "default": "postgres"
        },
        "database_password": {
          "description": "Password for Aqua's primary database user",
          "type": "string"
        },
        "database_host": {
          "description": "Hostname for Aqua's primary database",
          "type": "string"
        },
        "database_port": {
          "description": "Port for Aqua's primary database",
          "type": "integer",
          "default": 5432
        },
        "database_name": {
          "description": "Name of Aqua's primary database",
          "type": "string",
          "default": "scalock"
        }
      },
      "required": [
        "database_host",
        "database_port",
        "database_name",
        "database_user",
        "database_password"
      ]
    },
    "audit_database": {
      "description": "Provides configuration for Aqua's auditing database",
      "properties": {
        "audit_database_user": {
          "description": "Aqua's audit database username",
          "type": "string",
          "default": "postgres"
        },
        "audit_database_password": {
          "description": "Password for Aqua's audit database user",
          "type": "string"
        },
        "audit_database_host": {
          "description": "Hostname for Aqua's audit database",
          "type": "string"
        },
        "audit_database_port": {
          "description": "Port for Aqua's audit database",
          "type": "integer",
          "default": 5432
        },
        "audit_database_name": {
          "description": "Name of Aqua's audit database",
          "type": "string",
          "default": "slk_audit"
        }
      },
      "required": [
        "audit_database_host",
        "audit_database_port",
        "audit_database_name",
        "audit_database_user",
        "audit_database_password"
      ]
    },
    "advanced": {
      "description": "Advanced configuration for Aqua Gateway",
      "type": "object",
      "properties": {
        "cpus": {
          "description": "CPU allocation for the Aqua Gateway instance",
          "type": "number",
          "default": 1.0,
          "minimum": 0.5
        },
        "mem": {
          "description": "Memory (MB) allocation for the Aqua Gateway instance",
          "type": "number",
          "default": 512.0,
          "minimum": 256.0
        },
        "acceptedResourceRole": {
          "description": "Accepted resource role restriction for service",
          "type": "string",
          "default": "*"
        }
      }
    },
    "docker": {
      "type": "object",
      "description": "Allows you to specify a docker config file for private registries.\nSee [this link](https://mesosphere.github.io/marathon/docs/native-docker-private-registry.html) for details.",
      "properties": {
        "config_enabled": {
          "description": "Enable use of a docker config tarball.",
          "type": "boolean",
          "default": true
        },
        "config_location": {
          "description": "Location of file on Mesos agent nodes.  This must pre-exist.",
          "type": "string",
          "default": "file:///etc/docker.tar.gz"
        }
      }
    }
  }
}
